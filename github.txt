GIT

/*********************************************************************************************************************************/
git --version

git init //Inicializará la carpeta/repositorio que tienes en tu computador local

git status

git add . //Esto hará un seguimiento de los cambios realizados en la carpeta de tu sistema desde el último commit. Si es la primera vez que haces commit a los contenidos de la carpeta, se añadirán todos

git commit -m "Comentario" //Esto preparará los cambios añadidos/rastreados en la carpeta de tu sistema para empujar a Github

git log --oneline 

git push origin master //Esto es para empujar tus archivos a Github. Ten en cuenta que la última palabra en el comando master, no es una entrada fija cuando se ejecuta git push, puede ser reemplazada por cualquier “nombre_de_rama” relevante.

git push origin --delete <nombre_de_rama> //Eliminar rama remota

git clone //Se usa para copiar un repositorio. Si el repositorio está en un servidor remoto, usar: git clone nombredeusuario@host:/path/to/repository


/*********************************************************************************************************************************/
/* Ramas - Branch */

git branch //Devuelve el listado de todas las ramas creadas

git branch "nueva rama" //Crear rama

git checkout "nombre rama" //Cambiar rama

git checkout -b "nueva rama" //Crear rama y cambiarse a esa rama

git branch -m "nombre de la rama" "nuevo nombre de la rama" //Cambiar nombre a una rama

git branch -d "nombre de la rama" //Eliminar rama

git branch -h //Listado de cosas que se pueden hacer con branch

/*********************************************************************************************************************************/
/* Uniones - Merge */

Formas de uniones de Git

Fast-forward - Sin commits en la rama master, commits de rama secundaria y se unen las ramas. Sin problemas no provocan conflictos.
Uniones automáticas - Con commits en la rama master, commits de rama secundaria pero los commits en distintos archivos. Git los ordena como crea conveniente. Sin problemas no provocan conflictos.
Manual - Con commits en la rama master, commits de rama secundaria pero los commits en los mismos archivos y se pedira que se resuelva el conflicto de manera manual, se solicita un nuevo commit y con eso se podria continuar.

/*********************************************************************************************************************************/
/* */